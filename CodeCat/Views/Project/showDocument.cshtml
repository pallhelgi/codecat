@model CodeCat.Models.ViewModels.DocumentViewModel

@{
    ViewBag.Title = "Project::" + Model.docProjectName + " Document::" + Model.documentName;
}

<h3 class="our-breadcrumb breadcrumb-item-active breadcrumb-div">@Html.ActionLink("Dashboard", "../Dashboard/Dashboard") / @Html.ActionLink(Model.docProjectName, "../Project/ShowProject", new { id = Model.document.projectID }) / @Model.documentName</h3>
<button class="btn btn-fab" id="myBtn">Keyboard shortcuts</button>

<!--The Ace Editor begin-->
<div class="container">
    <div id="ace-editor">
        @Model.document.content
    </div>
</div>

<!-- Add Document -->
<!-- Save button for Document -->
<div class="editor-save-div">
    @using (Html.BeginForm("save", "Document", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.document.content, new { @id = "hidden-editor" })
        <input type="submit" value="Save" id="btn-save" class="editor-save-button btn btn-fab" />
    }
</div>

<!-- Modal window -->
<div id="myModal" class="modal">

    <div class="modal-content">
        <span class="close">&times;</span>

        <table>
            <caption>Keyboard shortcuts</caption>
            <tr>
                <th>Windows/Linux</th>
                <th>Mac</th>
                <th>Action</th>
            </tr>
            <tr>
                <td>Ctrl-D</td>
                <td>Command-D</td>
                <td>Remove line</td>
            </tr>
            <tr>
                <td>Ctrl-F</td>
                <td>Command-F</td>
                <td>Find</td>
            </tr>
            <tr>
                <td>Ctrl-H</td>
                <td>Command-Option-F</td>
                <td>Replace</td>
            </tr>
            <tr>
                <td>Ctrl-K</td>
                <td>Command-G</td>
                <td>Find next</td>
            </tr>
            <tr>
                <td>Ctrl-Shift-K</td>
                <td>Command-Shift-G</td>
                <td>Find previous</td>
            </tr>
            <tr>
                <td>Tab</td>
                <td>Tab</td>
                <td>Indent</td>
            </tr>
            <tr>
                <td>Shift-Tab</td>
                <td>Shift-Tab</td>
                <td>Outdent</td>
            </tr>
            <tr>
                <td>Ctrl-,</td>
                <td>Command-,</td>
                <td>Show the settings menu</td>
            </tr>
        </table>
    </div>
</div>
<!-- Modal window ends -->

@section scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.6/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="~/signalr/hubs"></script>

    <script>
        $("form").click(function () {
                $("#hidden-editor").val(editor.getSession().getValue());
                var content = editor.getSession().getValue();
                var url = window.location.href;
                var docID = parseInt(url.substring(url.lastIndexOf('?') + 1));

                function f() {
                    window.location.href = "../../Document/ShowDocument/" + docID;
                };
        });

        $(function () {
            $('#btn-save').on('click', function (e) {
                e.preventDefault();
                var DocumentModel = {};

                DocumentModel.content = editor.getSession().getValue();
                DocumentModel.ID = @Model.document.ID;

                var jsonData = JSON.stringify({
                    DocumentModel : DocumentModel
                });

                $.ajax({
                    type: 'POST',
                    url: '/Document/Save',
                    data: jsonData,
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        if(response == "success") {
                            toastr.success("Saved!");
                        }
                        else if(response == "error") {
                            toastr.error("This document has been deleted by another user");
                        }

                    }, error: function (response) {
                        toastr.error("Something went wrong");

                    }
                });

                return false;
            });
        });
    </script>

    <script>
        var documentID = @Model.document.ID;
        var editor = ace.edit("ace-editor");
        editor.setTheme("ace/theme/monokai");
        editor.getSession().setMode("ace/mode/javascript");

        var codeHub = $.connection.codeHub;
        var silent = false;

        codeHub.client.onChange = function (changeData) {
            silent = true;
            editor.getSession().getDocument().applyDelta(changeData);
            mytestfunc(changeData);
            silent = false;
        };

        $.connection.hub.start().done(function () {
            codeHub.server.joinDocument(documentID);
            editor.on("change", function (obj) {
                if(silent) {
                    return;
                }
                codeHub.server.onChange(obj, documentID);
            });
        });

        //Modal window functions
        var modal = document.getElementById('myModal');
        var btn = document.getElementById("myBtn");
        var span = document.getElementsByClassName("close")[0];

        btn.onclick = function() {
            modal.style.display = "block";
        }

        span.onclick = function() {
            modal.style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
        // auto-save feature
        function myTimer() {
            var DocumentModel = {};
            DocumentModel.content = editor.getSession().getValue();
            DocumentModel.ID = @Model.document.ID;
                
            var jsonData = JSON.stringify({
                DocumentModel : DocumentModel
            });

            $.ajax({
                type: 'POST',
                url: '/Document/Save',
                data: jsonData,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                }, error: function (response) {
                }
            });

            return false;
        }

        var myVar = setInterval(function(){ myTimer() }, 3000);
    </script>
}